services:
    app.admin.event_audience:
        class: App\Admin\EventAudienceAdmin
        arguments: [~, 'App\Entity\EventAudience', ~]
        tags:
            - {name: sonata.admin, manager_type: orm, group: События, label: Аудитории}

    app.admin.event_sponsor:
        class: App\Admin\EventSponsorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false }
        arguments: ['', 'App\Entity\EventSponsor', ~]

    app.admin.sponsor:
        class: App\Admin\SponsorAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Спонсоры, label: Спонсоры }
        arguments: ['', 'App\Entity\Sponsor', ~]
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]
            - [setCacheManager, ['@liip_imagine.cache.manager']]
            - [setDataManager, ['@liip_imagine.data.manager']]
            - [setFilterManager, ['@liip_imagine.filter.manager']]

    app.admin.category:
        class: App\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Спонсоры, label: Категории }
        arguments: ['', 'App\Entity\Category', ~]
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.admin.event:
        class: App\Admin\EventAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: События, label: События }
        arguments: ['', 'App\Entity\Event', ~, '@App\Service\User\UserService']
        calls:
            - [setGoogleMap, ['@App\Service\GoogleMapService']]
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.admin.event_group:
        class: App\Admin\EventGroupAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: События, label: Групы }
        arguments: ['', 'App\Entity\EventGroup', '', '@App\Repository\EventRepository']

    app.admin.reviews:
        class: App\Admin\ReviewAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: События, label: Доклады }
        arguments: ['', 'App\Entity\Review', ~, '@App\Repository\EventRepository']
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.admin.speaker:
        class: App\Admin\SpeakerAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: События, label: Докладчики }
        arguments: ['', 'App\Entity\Speaker', ~, '@App\Repository\EventRepository']
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]
            - [setCacheManager, ['@liip_imagine.cache.manager']]
            - [setDataManager, ['@liip_imagine.data.manager']]
            - [setFilterManager, ['@liip_imagine.filter.manager']]

    app.admin.event_page:
        class: App\Admin\EventPageAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: События, label: Страницы }
        arguments: ['', 'App\Entity\EventPage', ~, '@App\Repository\EventRepository']
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.admin.mails:
        class: App\Admin\MailAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Рассылки, label: Рассылки }
        arguments: ['', 'App\Entity\Mail', App\Controller\MailAdminController, '@App\Repository\UserRepository', '@App\Repository\TicketRepository']
        calls:
            - [addChild, ['@app.admin.mail_queue']]
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]
            - [setEntityManager, ['@doctrine.orm.entity_manager']]

    app.admin.mail_queue:
        class: App\Admin\MailQueueAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Рассылки, label: Очередь }
        arguments: ['', 'App\Entity\MailQueue', ~]
        calls:
            - [setEntityManager, ['@doctrine.orm.entity_manager']]

    app.admin.tickets:
        class: App\Admin\TicketAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Билеты, label: Билеты }
        arguments: ['', 'App\Entity\Ticket', 'App\Controller\TicketCRUDController', '@App\Repository\EventRepository']

    app.admin.payment:
        class: App\Admin\PaymentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Билеты, label: Платежи }
        arguments: ['', 'App\Entity\Payment', ~, '@App\Repository\EventRepository']
        calls:
            - [setTokenStorage, ['@security.token_storage']]

    app.admin.promo_code:
        class: App\Admin\PromoCodeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Билеты, label: 'Промо коды' }
        arguments: ['', 'App\Entity\PromoCode', ~, '@App\Repository\EventRepository']
        calls:
            - [setTokenStorage, ['@security.token_storage']]
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.admin.user:
        class: App\Admin\UserAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Пользователи, label: 'Пользователи' }
        arguments: ['', 'App\Entity\User', ~]
        calls:
            - [setTokenStorage, ['@security.token_storage']]

    app.admin.user_event:
        class: App\Admin\UserEventRegistrationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Билеты, label: Регистрации }
        arguments: ['', 'App\Entity\UserEventRegistration', ~, '@App\Repository\EventRepository']

    app.admin.page:
        class: App\Admin\PageAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Страницы, label: Страницы }
        arguments: ['', 'App\Entity\Page', ~]
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.ticket_cost.admin:
        class: App\Admin\TicketCostAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false}
        arguments: [~, 'App\Entity\TicketCost', ~, '@App\Repository\EventRepository']

    app.event_block.admin:
        class: App\Admin\EventBlockAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false}
        arguments: [~, 'App\Entity\EventBlock', ~]
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]

    app.wayforpay_log.admin:
        class: App\Admin\WayForPayLogAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Логи, label: Логи wayforpay}
        arguments: [~, 'App\Entity\WayForPayLog', ~]

    app.admin.mail_admin:
        class: App\Admin\MailAdmin
        tags:
            - { name: mail_admin, manager_type: orm }
        arguments: ['', 'App\Entity\Mail', 'App\Controller\MailAdminController', '@App\Repository\UserRepository', '@App\Repository\TicketRepository']
        calls:
            - [setLocalsRequiredService, ['@App\Service\LocalsRequiredService']]
            - [setEntityManager, ['@doctrine.orm.entity_manager']]
