<?php

namespace Stfalcon\Bundle\EventBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Stfalcon\Bundle\EventBundle\Entity\Event;

/**
 * EventNewsRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventNewsRepository extends EntityRepository
{
    /**
     * Get array of last news.
     *
     * @param int $count
     *
     * @return array
     */
    public function getLastNews($count = null)
    {
        return $this->getBaseQueryBuilder($count)->getQuery()->getResult();
    }

    /**
     * Get array of last news for event.
     *
     * @param Event $event
     * @param int   $count
     *
     * @return array
     */
    public function getLastNewsForEvent(Event $event, $count = null)
    {
        $qb = $this->getBaseQueryBuilder($count)
                ->where('n.event = :event')
                ->setParameter('event', $event);

        // cache sample
        // $query = $qb->getQuery()->useResultCache(true, 86400, 'last_news_for_event');
        $query = $qb->getQuery();

        return $query->getResult();
    }

    /**
     * @param null $count
     *
     * @return \Doctrine\ORM\QueryBuilder
     */
    private function getBaseQueryBuilder($count = null)
    {
        $qb = $this->getEntityManager()
            ->createQueryBuilder()
            ->add('select', 'n')
            ->add('from', 'StfalconEventBundle:EventNews n')
            ->add('orderBy', 'n.created_at DESC');

        $count = (int) $count;
        if ($count) {
            $qb->setMaxResults($count);
        }

        return $qb;
    }
}
